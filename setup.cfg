[metadata]
name = Mezzanine
version = attr: mezzanine.__version__
description = An open source content management platform built using the Django framework.
long_description = file: README.rst
long_description_content_type = text/x-rst
author = Stephen McDonald
author_email = stephen.mc@gmail.com
url = http://mezzanine.jupo.org/
license = BSD
license_file = LICENSE
classifiers =
    Development Status :: 5 - Production/Stable
    Environment :: Web Environment
    Framework :: Django
    Intended Audience :: Developers
    License :: OSI Approved :: BSD License
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Topic :: Internet :: WWW/HTTP
    Topic :: Internet :: WWW/HTTP :: Dynamic Content
    Topic :: Internet :: WWW/HTTP :: WSGI
    Topic :: Software Development :: Libraries :: Application Frameworks
    Topic :: Software Development :: Libraries :: Python Modules

[options]
python_requires = >=3.6
packages = mezzanine
include_package_data = true
install_requires =
    django-contrib-comments >= 1.9
    django >= 2.2
    filebrowser-safe >= 0.5
    grappelli-safe >= 0.5
    tzlocal >= 2
    bleach >= 2
    beautifulsoup4 >= 4.5.3
    requests >= 2.1.0
    requests-oauthlib >= 1.3
    pillow >= 7
    chardet

[options.extras_require]
testing =
    pytest-django >= 4, <5
codestyle =
    flake8 >= 3, <4
    black==20.8b1

[options.entry_points]
console_scripts =
    mezzanine-project = mezzanine.bin.mezzanine_project:create_project

# Building

[bdist_wheel]
universal = 1

# Testing

[tox:tox]
skip_missing_interpreters = true
envlist =
    py{36,37,38,39}-dj{22,30,31,32}
    py{38,39}-dj{main}
    flake8
    black
    package

[testenv]
# Run test suite
usedevelop = true
deps =
    .[testing]
    https://github.com/stephenmcd/filebrowser-safe/archive/master.tar.gz#egg=filebrowser_safe
    https://github.com/stephenmcd/grappelli-safe/archive/master.tar.gz#egg=grappelli_safe
    dj22: Django>=2.2, <3
    dj30: Django>=3.0, <3.1
    dj31: Django>=3.1, <3.2
    dj32: Django>=3.2, <3.3
    djmain: https://github.com/django/django/archive/main.tar.gz#egg=Django
commands =
    pytest --basetemp="{envtmpdir}" --junitxml="junit/TEST-{envname}.xml" {posargs}

[testenv:py{38,39}-djmain]
# Same as above, but ignoring the output while testing against Django main
ignore_outcome = true
deps = {[testenv]deps}
commands = {[testenv]commands}

[testenv:package]
# Check package integrity and compatibility with PyPI
deps =
    twine
    check-manifest
skip_install = true
commands =
    python setup.py -q sdist --dist-dir="{envtmpdir}/dist"
    twine check "{envtmpdir}/dist/*"
    check-manifest --ignore-bad-ideas '*.mo' {toxinidir}

[testenv:format]
# This env is not run by default. It's provided here for you
# to easily autoformat code by running `tox -e format`
skip_install = true
deps = .[codestyle]
commands = black .

[testenv:black]
# Lint with black
skip_install = true
deps = .[codestyle]
commands = black . --check

[testenv:flake8]
# Lint with flake8
skip_install = true
deps = .[codestyle]
commands = flake8 .

[flake8]
# Configured to match black
ignore =
    E203
    W503
    E731
max-line-length = 88
exclude =
    migrations
    .tox
    .git
    .eggs
    *.egg-info
    build
    dist

[gh-actions]
# Connect GitHub Action matrices with tox envs
python =
    3.6: py36
    3.7: py37
    3.8: py38
    3.8: py39, flake8, black, package
